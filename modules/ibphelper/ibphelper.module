<?php
// $Id$
// IBP Helper Module
//

function ibphelper_perm() {
	return array(
		'admin ibphelper',
		);
}

function ibphelper_menu() {
	return array(
		'admin/settings/ibphelper' => array(
			'access arguments' => array('admin ibphelper'),
			'page callback' => 'drupal_get_form',
			'page arguments' => array('ibphelper_admin_form'),
			'title' => 'IBP Helper',
			),
		);
}

function ibphelper_admin_form() {
	$form = array();
	
	$vocs = taxonomy_get_vocabularies();
	$options = array(t('Choose one'));
	foreach ($vocs as $voc) {
		$options[$voc->vid] = $voc->name;
	}
	
	$form['ibphelper_tools_vocabulary'] = array(
		'#title' => t('IB Tools Vocabulary'),
		'#description' => t('Select the Vocabulary to use in the IB Tools Navigation Menu block'),
		'#type' => 'select',
		'#options' => $options,
		'#default_value' => variable_get('ibphelper_tools_vocabulary', 0),
		);
	
	return system_settings_form($form);
}

function ibphelper_block($op = 'list', $delta = 0, $edit = array()) {
	$block = array();
	if ($op == 'list') {
		$block[0] = array(
			'info' => t('IB Tools Navigation Menu')
			);
	} else if ($op == 'view') {
		switch ($delta) {
		case 0 :
			drupal_add_js(drupal_get_path('module', 'ibphelper') . '/js/ibp-nav-menu.js');
			drupal_add_css(drupal_get_path('module', 'ibphelper') . '/css/ibp-nav-menu.css');
			$block['subject'] = t('IB Tools');
			
			if ($vid = variable_get('ibphelper_tools_vocabulary', 0)) {			
				$block['content'] = ibphelper_ibtools_nav_menu();
			}
			break;
		}
	}
	return $block;
}

function ibphelper_ibtools_nav_menu($pid = 0) {
	$menu = taxonomy_get_tree(variable_get('ibphelper_tools_vocabulary', 0), $pid, 0);
	$items = array();
	foreach ($menu as $m) {
		$item = l($m->name, "taxonomy/term/$m->tid");
		if ($subitems = ibphelper_ibtools_nav_menu($m->tid)) {
			$item .= $subitems;
		}
		$items[] = array('data' => $item, 'class' => $pid ? 'ibtools_nav_submenu_item' : 'ibtools_nav_menu_item');
	}
	return theme('item_list', $items, NULL, 'ul', array('class' => $pid ? 'ibtools_nav_submenu' : 'ibtools_nav_menu'));
}

function ibphelper_nodeapi(&$node, $op, $teaser, $page) {
	if ($op == 'view') {
		if ($node->type == 'ibp_tool') {
			drupal_add_css(drupal_get_path('module', 'ibphelper') . '/css/ibp-tool.css');
		}
	}
}

function ibphelper_hook_info() {
	return array(
		'ibphelper' => array(
			'ibphelper' => array(
				'user_register' => array(
					'runs when' => t('User registration page is viewed by anonymous user.'),
					),
				),
			),
		);
}

function ibphelper_action_info_alter(&$info) {
  if (isset($info['system_goto_action']['hooks'])) {
    $info['system_goto_action']['hooks']['ibphelper'] = array('user_register');
  }
}

function ibphelper_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == 'user_register') {
		if ($aids = _trigger_get_hook_aids('ibphelper', $form_id)) {
			$context = array(
				'hook' => 'ibphelper',
				'op' => $form_id,
			);
			$dummy = new stdClass();
			foreach ($aids as $aid => $action_info) {
				actions_do($aid, $dummy, $context);
			}
		}
	}
}