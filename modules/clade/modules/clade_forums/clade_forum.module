<?php

function clade_forum_menu() {
	$items = array();
	$items['clade/%clade/forums'] = array(
    'title' => 'Forums',
    'page callback' => 'clade_forum_clade_forum',   
    'page arguments' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
		);
	return $items;
}

function clade_forum_menu_alter(&$callbacks) {
  $callbacks['forum']['access arguments'] = array('access content');
  $callbacks['forum']['page callback'] = 'clade_forum_redirect';
}

function clade_forum_redirect($tid = 0) {
	if ($tid) {
		if ($clade_id = clade_forum_clade_from_forum($tid)) {
			drupal_goto("clade/$clade_id/forums");
		}
	}
	return forum_page($tid);
}

function clade_forum_clade_forum($clade) {
	drupal_set_title($clade->name . " Community Forum");
	module_load_include('inc', 'forum', 'forum.pages');
	return forum_page($clade->forum);
}

function clade_forum_clade_forum_title($clade) {
	return "$clade->name Community Forum";
}

function clade_forum_clade($op, $obj = NULL) {
	if ($op == 'clade load') {
		$sql = "SELECT fid FROM {clade_forum} WHERE tid = %d";
		$obj->forum = db_result(db_query($sql, $obj->tid));
	}
	else if ($op == 'clade insert') {
		$forum_vid = variable_get('forum_nav_vocabulary', 0);
		$forum_fields = array();
		$forum_fields['values']['name'] = "$obj->name Forum";
		$forum_fields['values']['description'] = "$obj->name Forum";
		$forum_fields['values']['parent'][0] = 0;
		$forum_fields['values']['weight'] = 0;
		$forum_fields['values']['vid'] = $forum_vid;
		
		module_load_include('inc', 'forum', 'forum.admin');
		$forum = forum_form_forum($forum_fields);
		forum_form_submit($forum, $forum_fields);
		
		$clade_forum = array('tid' => $obj->tid, 'fid' => $forum_fields['values']['tid']);
		drupal_write_record('clade_forum', $clade_forum);
	}
	else if ($op == 'clade delete') {
		$sql = "DELETE FROM {clade_forum} WHERE tid = %d";
		db_query($sql, $obj->tid);
	}
	else if ($op == 'determine context') {
		$path = $_GET['q'];
		if (strpos($path, 'node/add/forum') === 0) {
			if ($clade = clade_load(clade_forum_clade_from_forum(arg(3)))) {
				return $clade;
			}
		} else if (strpos($path, 'node/') === 0) {
			if ($obj->type == 'forum') {
				$clade_vid = variable_get('clade_vocabulary',0);
				foreach ($obj->taxonomy as $tid => $term) {
					if ($term->vid == $clade_vid) {
						$clade = clade_get_clade($tid);
						return $clade;
					}
				}
			}
		}
	}
	else if ($op == 'clade node types') {
		return 'forum';
	}
}

function clade_forum_clade_details_items($clade) {
	return array(
		'forum_page' => array(
			'data' => l(t('Forums'), sprintf('clade/%d/forums', $clade->tid)),
			'data-sort' => 2,
			'class' => 'clade-details-item',
			),
		);
}

function clade_forum_form_alter(&$form, &$form_state, $form_id) {
	if ($form_id == "forum_node_form") {
		$form['taxonomy']['#type'] = '';
		
		$vid = variable_get('forum_nav_vocabulary', 0);
		$form['taxonomy'][$vid]['#type'] = 'value';
		$form['taxonomy'][$vid]['#value'] = $form['taxonomy'][$vid]['#default_value'][0];
		unset($form['taxonomy'][$vid]['#theme']);
		
		$clade_tid = clade_forum_clade_from_forum($form['taxonomy'][$vid]['#value']);
		$vid = variable_get('clade_vocabulary', 0);
		$form['taxonomy'][$vid]['#type'] = 'value';
		$form['taxonomy'][$vid]['#value'] = array($clade_tid);
		unset($form['taxonomy'][$vid]['#theme']);
	}
}

function clade_forum_clade_from_forum($forum_id) {
	$sql = "SELECT tid FROM {clade_forum} WHERE fid = %d";
	$tid = db_result(db_query($sql, $forum_id));
	return $tid;
}

function clade_forum_get_forum($clade_id) {
	$sql = "SELECT fid FROM {clade_forum} WHERE tid = %d";
	$fid = db_result(db_query($sql, $clade_id));
	return $fid;
}

function clade_forum_link_alter(&$links, $node, $comment = NULL) {
	foreach ($links as &$link) {
		if (strpos($link['href'], 'forum/') === 0) {
			$parts = explode('/', $link['href']);
			$clade_tid = clade_forum_clade_from_forum($parts[1]);
			$link['href'] = "clade/$clade_tid/forums";
		}
	}
}

function clade_forum_views_api() {
  return array('api' => 2.0);
}

/**
 * Implementation of hook_node_info().
 */
function clade_forum_node_info() {
  return array(
    'forum' => array(
      'name' => t('Forum topic'),
      'module' => 'clade_forum',
      'description' => t('A <em>forum topic</em> is the initial post to a new discussion thread within a forum.'),
      'title_label' => t('Subject'),
    )
  );
}

